<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Skidrop</title>
</head>
<style>
/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
    color: #1a1a1a;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.container {
    max-width: 900px;
    margin: 0 auto;
    padding: 1rem;
}

/* Header */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 20px;
    padding: 1.5rem 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.device-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    min-width: 0;
    flex: 1;
}

.device-avatar {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
}

.device-details {
    min-width: 0;
    flex: 1;
}

.device-name {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.device-address {
    color: #666;
    font-size: 0.9rem;
    font-family: 'SF Mono', Monaco, monospace;
}

.pin-display {
    text-align: right;
    flex-shrink: 0;
}

.pin-label {
    display: block;
    font-size: 0.8rem;
    color: #666;
    margin-bottom: 0.25rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.pin-code {
    font-size: 1.5rem;
    font-weight: 700;
    color: #007AFF;
    font-family: 'SF Mono', Monaco, monospace;
}

/* Upload Section */
.upload-section {
    margin-bottom: 3rem;
}

.upload-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 24px;
    padding: 2rem;
    border: 2px dashed #e1e5e9;
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.upload-card:hover {
    border-color: #007AFF;
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 122, 255, 0.15);
}

.upload-card.drag-over {
    border-color: #007AFF;
    background: rgba(0, 122, 255, 0.05);
    transform: scale(1.02);
}

.upload-card.file-selected {
    border-color: #34C759;
    border-style: solid;
    cursor: default;
}

.upload-content {
    text-align: center;
    width: 100%;
}

.upload-icon {
    margin-bottom: 1.5rem;
    color: #007AFF;
}

.upload-content h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.upload-content p {
    color: #666;
    margin-bottom: 2rem;
}

.browse-btn {
    background: #007AFF;
    color: white;
    border: none;
    padding: 0.75rem 2rem;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    font-size: 1rem;
}

.browse-btn:hover {
    background: #0056b3;
    transform: translateY(-1px);
}

/* File Preview */
.file-preview {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    width: 100%;
    text-align: left;
}

.preview-icon {
    width: 64px;
    height: 64px;
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
}

.preview-info {
    flex: 1;
    min-width: 0;
}

.preview-info h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
    word-break: break-all;
}

.preview-info p {
    color: #666;
    font-size: 0.9rem;
}

.preview-actions {
    display: flex;
    gap: 0.75rem;
    flex-shrink: 0;
}

.change-btn {
    background: #8E8E93;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.change-btn:hover {
    background: #6D6D70;
    transform: translateY(-1px);
}

.upload-btn {
    background: #34C759;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.upload-btn:hover {
    background: #28a745;
    transform: translateY(-1px);
}

.upload-btn:disabled {
    background: #8E8E93;
    cursor: not-allowed;
    transform: none;
}

#fileInput {
    display: none;
}

/* Section Titles */
.section-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    color: #1a1a1a;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

/* Files Section */
.files-section {
    margin-bottom: 3rem;
}

.files-grid {
    display: grid;
    gap: 1rem;
}

.file-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 16px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.2s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.file-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.file-icon {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
}

.file-info {
    flex: 1;
    min-width: 0;
}

.file-name {
    font-weight: 600;
    word-break: break-all;
    margin-bottom: 0.25rem;
}

.file-meta {
    color: #666;
    font-size: 0.9rem;
}

.file-actions {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
}

.action-btn {
    width: 44px;
    height: 44px;
    border-radius: 12px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    text-decoration: none;
}

.download-btn {
    background: #34C759;
    color: white;
}

.download-btn:hover {
    background: #28a745;
    transform: scale(1.05);
}

.delete-btn {
    background: #FF3B30;
    color: white;
}

.delete-btn:hover {
    background: #dc3545;
    transform: scale(1.05);
}

.delete-form {
    display: inline;
}

/* Devices Section */
.devices-section {
    margin-bottom: 2rem;
}

.devices-grid {
    display: grid;
    gap: 1rem;
}

.device-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 16px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.2s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.device-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.device-card .device-avatar {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.device-card .device-info {
    flex: 1;
    min-width: 0;
}

.device-card .device-name {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
}

.device-card .device-address {
    color: #666;
    font-size: 0.85rem;
    font-family: 'SF Mono', Monaco, monospace;
}

.connect-btn {
    background: #007AFF;
    color: white;
    border: none;
    padding: 0.75rem 1.25rem;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    font-size: 0.9rem;
    flex-shrink: 0;
}

.connect-btn:hover {
    background: #0056b3;
    transform: translateY(-1px);
}

/* Empty and Loading States */
.empty-state,
.loading-state,
.error-state {
    text-align: center;
    padding: 3rem 2rem;
    color: #666;
}

.empty-state svg,
.loading-state svg,
.error-state svg {
    margin-bottom: 1rem;
    opacity: 0.5;
}

.empty-state span,
.error-state span {
    display: block;
    font-size: 0.9rem;
    color: #999;
    margin-top: 0.5rem;
}

.spinner {
    width: 32px;
    height: 32px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #007AFF;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
}

.spinner-small {
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Responsive Design */
@media (max-width: 768px) {
    .container {
        padding: 0.75rem;
    }
    
    .header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
        padding: 1.25rem 1.5rem;
    }
    
    .device-info {
        flex-direction: column;
        text-align: center;
        gap: 0.75rem;
    }
    
    .device-name {
        font-size: 1.25rem;
    }
    
    .pin-display {
        text-align: center;
    }
    
    .upload-card {
        padding: 1.5rem;
        min-height: 180px;
    }
    
    .upload-content h2 {
        font-size: 1.25rem;
    }
    
    .browse-btn {
        padding: 0.875rem 1.75rem;
        font-size: 1rem;
    }
    
    .file-preview {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
    }
    
    .preview-actions {
        justify-content: center;
        width: 100%;
    }
    
    .change-btn,
    .upload-btn {
        flex: 1;
        justify-content: center;
        min-width: 120px;
    }
    
    .file-card,
    .device-card {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
        padding: 1.25rem;
    }
    
    .file-actions,
    .preview-actions {
        justify-content: center;
        gap: 1rem;
    }
    
    .action-btn {
        width: 48px;
        height: 48px;
    }
    
    .connect-btn {
        padding: 0.875rem 1.5rem;
        width: 100%;
        justify-content: center;
    }
    
    .section-title {
        font-size: 1.125rem;
    }
}

@media (max-width: 480px) {
    .container {
        padding: 0.5rem;
    }
    
    .header {
        padding: 1rem;
        border-radius: 16px;
        margin-bottom: 1.5rem;
    }
    
    .device-name {
        font-size: 1.125rem;
    }
    
    .pin-code {
        font-size: 1.25rem;
    }
    
    .upload-card {
        padding: 1.25rem;
        border-radius: 20px;
        min-height: 160px;
    }
    
    .upload-content h2 {
        font-size: 1.125rem;
    }
    
    .upload-content p {
        font-size: 0.9rem;
    }
    
    .browse-btn {
        padding: 0.75rem 1.5rem;
        font-size: 0.9rem;
    }
    
    .preview-icon {
        width: 56px;
        height: 56px;
    }
    
    .preview-info h3 {
        font-size: 1.125rem;
    }
    
    .change-btn,
    .upload-btn {
        padding: 0.75rem 1.25rem;
        font-size: 0.9rem;
    }
    
    .file-card,
    .device-card {
        padding: 1rem;
        border-radius: 12px;
    }
    
    .file-icon,
    .device-card .device-avatar {
        width: 40px;
        height: 40px;
    }
    
    .section-title {
        font-size: 1rem;
        margin-bottom: 1rem;
    }
}

/* Touch improvements for mobile */
@media (hover: none) and (pointer: coarse) {
    .action-btn,
    .connect-btn,
    .browse-btn,
    .change-btn,
    .upload-btn {
        min-height: 44px;
        min-width: 44px;
    }
    
    .upload-card {
        cursor: pointer;
        -webkit-tap-highlight-color: transparent;
    }
}

/* Smooth animations */
@media (prefers-reduced-motion: no-preference) {
    * {
        transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
    }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .upload-card,
    .file-card,
    .device-card,
    .header {
        border: 2px solid #000;
    }
    
    .browse-btn,
    .upload-btn,
    .connect-btn {
        border: 2px solid #000;
    }
}
</style>
<body>
    <div class="container">

        <!-- Devices Section -->
        <section class="devices-section">
            <h3 class="section-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="12" cy="12" r="3"/>
                    <path d="M12 1v6m0 6v6"/>
                    <path d="m21 12-6 0m-6 0-6 0"/>
                </svg>
                Nearby Devices
            </h3>
            <div class="devices-grid" id="device-list">
                <div class="loading-state">
                    <div class="spinner"></div>
                    <p>Discovering devices...</p>
                </div>
            </div>
        </section>
        
        <!-- Header Section -->
        <header class="header">
            <div class="device-info">
                <div class="device-avatar">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="2" y="3" width="20" height="14" rx="2" ry="2"/>
                        <line x1="8" y1="21" x2="16" y2="21"/>
                        <line x1="12" y1="17" x2="12" y2="21"/>
                    </svg>
                </div>
                <div class="device-details">
                    <h1 class="device-name"><%= deviceName %></h1>
                    <p class="device-address"><%= ip %>:<%= port %></p>
                </div>
            </div>
            <div class="pin-display">
                <span class="pin-label">PIN</span>
                <span class="pin-code"><%= pin %></span>
            </div>
        </header>

        <!-- Upload Section -->
        <section class="upload-section">
            <div class="upload-card" id="uploadCard">
                <div class="upload-content" id="uploadContent">
                    <div class="upload-icon">
                        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                            <polyline points="7,10 12,15 17,10"/>
                            <line x1="12" y1="15" x2="12" y2="3"/>
                        </svg>
                    </div>
                    <h2>Drop a file here to share</h2>
                    <p>or tap to browse</p>
                    <button type="button" class="browse-btn" id="browseBtn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                            <polyline points="14,2 14,8 20,8"/>
                            <path d="M16 13a4 4 0 0 1 0 6H5a4 4 0 0 1 0-6"/>
                        </svg>
                        Choose File
                    </button>
                </div>

                <!-- File Preview (hidden initially) -->
                <div class="file-preview" id="filePreview" style="display: none;">
                    <div class="preview-icon" id="previewIcon">
                        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                            <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/>
                            <polyline points="13,2 13,9 20,9"/>
                        </svg>
                    </div>
                    <div class="preview-info">
                        <h3 id="fileName">filename.txt</h3>
                        <p id="fileSize">1.2 MB</p>
                    </div>
                    <div class="preview-actions">
                        <button type="button" class="change-btn" id="changeBtn">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                                <polyline points="14,2 14,8 20,8"/>
                            </svg>
                            Change
                        </button>
                        <button type="submit" class="upload-btn" id="uploadBtn" form="uploadForm">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                                <polyline points="17,8 12,3 7,8"/>
                                <line x1="12" y1="3" x2="12" y2="15"/>
                            </svg>
                            Upload
                        </button>
                    </div>
                </div>

                <form action="/upload" method="POST" enctype="multipart/form-data" id="uploadForm">
                    <input type="file" name="file" id="fileInput" required />
                </form>
            </div>
        </section>

        <!-- Files Section -->
        <section class="files-section">
            <h3 class="section-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"/>
                </svg>
                Shared Files
            </h3>
            <div class="files-grid">
                <% if (files.length === 0) { %>
                    <div class="empty-state">
                        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                            <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/>
                            <polyline points="13,2 13,9 20,9"/>
                        </svg>
                        <p>No files shared yet</p>
                        <span>Upload your first file to get started</span>
                    </div>
                <% } else { %>
                    <% files.forEach(function(file) { %>
                        <div class="file-card">
                            <div class="file-icon">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                                    <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/>
                                    <polyline points="13,2 13,9 20,9"/>
                                </svg>
                            </div>
                            <div class="file-info">
                                <h4 class="file-name"><%= file %></h4>
                                <p class="file-meta">Ready to download</p>
                            </div>
                            <div class="file-actions">
                                <a href="/<%= file %>" target="_blank" class="action-btn download-btn" title="Download">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                                        <polyline points="7,10 12,15 17,10"/>
                                        <line x1="12" y1="15" x2="12" y2="3"/>
                                    </svg>
                                </a>
                                <form class="delete-form" action="/delete" method="POST" onsubmit="return confirm('Delete <%= file %>?');">
                                    <input type="hidden" name="filename" value="<%= file %>" />
                                    <button type="submit" class="action-btn delete-btn" title="Delete">
                                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <polyline points="3,6 5,6 21,6"/>
                                            <path d="m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"/>
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    <% }); %>
                <% } %>
            </div>
        </section>
    </div>

    <script>
        // File upload functionality
        const uploadCard = document.getElementById('uploadCard');
        const fileInput = document.getElementById('fileInput');
        const uploadForm = document.getElementById('uploadForm');
        const uploadContent = document.getElementById('uploadContent');
        const filePreview = document.getElementById('filePreview');
        const browseBtn = document.getElementById('browseBtn');
        const changeBtn = document.getElementById('changeBtn');
        const uploadBtn = document.getElementById('uploadBtn');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');

        // File selection handlers
        browseBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            fileInput.click();
        });

        changeBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            fileInput.click();
        });

        uploadCard.addEventListener('click', (e) => {
            if (e.target === uploadCard || e.target.closest('#uploadContent')) {
                fileInput.click();
            }
        });

        // File input change handler
        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                showFilePreview(file);
            }
        });

        // Drag and drop functionality
        uploadCard.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadCard.classList.add('drag-over');
        });

        uploadCard.addEventListener('dragleave', (e) => {
            if (!uploadCard.contains(e.relatedTarget)) {
                uploadCard.classList.remove('drag-over');
            }
        });

        uploadCard.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadCard.classList.remove('drag-over');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                const file = files[0]; // Only take the first file
                fileInput.files = e.dataTransfer.files;
                showFilePreview(file);
            }
        });

        // Show file preview
        function showFilePreview(file) {
            fileName.textContent = file.name;
            fileSize.textContent = formatFileSize(file.size);
            
            uploadContent.style.display = 'none';
            filePreview.style.display = 'flex';
            
            uploadCard.classList.add('file-selected');
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Upload form submission
        uploadForm.addEventListener('submit', (e) => {
            uploadBtn.innerHTML = `
                <div class="spinner-small"></div>
                Uploading...
            `;
            uploadBtn.disabled = true;
        });

        // Device discovery
        async function loadDevices() {
            try {
                const res = await fetch('/devices');
                const devices = await res.json();
                const container = document.getElementById('device-list');
                
                if (devices.length === 0) {
                    container.innerHTML = `
                        <div class="empty-state">
                            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                                <circle cx="11" cy="11" r="8"/>
                                <path d="m21 21-4.35-4.35"/>
                            </svg>
                            <p>No devices found</p>
                            <span>Make sure other devices are on the same network</span>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = '';
                devices.forEach(device => {
                    const deviceCard = document.createElement('div');
                    deviceCard.className = 'device-card';
                    deviceCard.innerHTML = `
                        <div class="device-avatar">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <rect x="2" y="3" width="20" height="14" rx="2" ry="2"/>
                                <line x1="8" y1="21" x2="16" y2="21"/>
                                <line x1="12" y1="17" x2="12" y2="21"/>
                            </svg>
                        </div>
                        <div class="device-info">
                            <h4 class="device-name">${device.deviceName}</h4>
                            <p class="device-address">${device.ip}:${device.port}</p>
                        </div>
                        <form action="http://${device.ip}:${device.port}/" method="get" target="_blank">
                            <button type="submit" class="connect-btn">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
                                    <polyline points="15,3 21,3 21,9"/>
                                    <line x1="10" y1="14" x2="21" y2="3"/>
                                </svg>
                                Connect
                            </button>
                        </form>
                    `;
                    container.appendChild(deviceCard);
                });
            } catch (err) {
                document.getElementById('device-list').innerHTML = `
                    <div class="error-state">
                        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                            <circle cx="12" cy="12" r="10"/>
                            <line x1="12" y1="8" x2="12" y2="12"/>
                            <line x1="12" y1="16" x2="12.01" y2="16"/>
                        </svg>
                        <p>Error loading devices</p>
                        <span>Check your network connection</span>
                    </div>
                `;
                console.error(err);
            }
        }

        // Auto-refresh devices
        setInterval(loadDevices, 3000);
        loadDevices();
    </script>
</body>
</html>